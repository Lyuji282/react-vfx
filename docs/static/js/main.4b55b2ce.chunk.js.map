{"version":3,"sources":["../../src/index.ts","../../src/context.ts","../../src/provider.tsx","../../src/vfx-player.ts","../../src/dom-to-canvas.ts","../../src/constants.ts","../../src/gif.ts","../../../src/gifuct-js/index.js","../../../src/gifuct-js/gif.js","../../../src/gifuct-js/dataparser.js","../../../src/gifuct-js/bytestream.js","../../../src/gifuct-js/schema.js","../../../src/gifuct-js/parsers.js","../../src/image.tsx","../../src/video.tsx","../../src/element.tsx","App.tsx","index.tsx"],"names":["this","w","h","scrollX","scrollY","range","document","createElement","doc","documentElement","appendChild","createContextualFragment","html","setAttribute","frame","image","descriptor","ByteStream","prototype","peekByte","label","codes","stream","peekBytes","parts","parser","Parsers","readBytes","skip","readByte","subBlocks","init","react_1","useCallback","shader","props","ref","current","App","useState","text","setText","debouncedText","setDebouncedText","useDebounce","className","src","style","fontSize","type","value","onChange","e","target","alt","autoPlay","loop","muted","playsInline","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4b55b2ce.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst provider_1 = __importDefault(require(\"./provider\"));\nexports.VFXProvider = provider_1.default;\nconst image_1 = __importDefault(require(\"./image\"));\nexports.VFXImg = image_1.default;\nconst video_1 = __importDefault(require(\"./video\"));\nexports.VFXVideo = video_1.default;\nconst element_1 = __importDefault(require(\"./element\"));\nexports.VFXSpan = element_1.default(\"span\");\nexports.VFXDiv = element_1.default(\"div\");\nexports.VFXP = element_1.default(\"p\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nexports.VFXContext = react_1.createContext({});\n//# sourceMappingURL=context.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst react_1 = require(\"react\");\nconst context_1 = require(\"./context\");\nconst vfx_player_1 = __importDefault(require(\"./vfx-player\"));\nconst canvasStyle = {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 9999,\n    pointerEvents: \"none\"\n};\nexports.VFXProvider = props => {\n    const [player, setPlayer] = react_1.useState(null);\n    const canvasRef = react_1.useRef(null);\n    react_1.useEffect(() => {\n        if (canvasRef.current == null) {\n            return;\n        }\n        const player = new vfx_player_1.default(canvasRef.current);\n        setPlayer(player);\n        player.play();\n        return () => {\n            player.stop();\n        };\n    }, [canvasRef]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"canvas\", { ref: canvasRef, style: canvasStyle }),\n        React.createElement(context_1.VFXContext.Provider, { value: player }, props.children)));\n};\nexports.default = exports.VFXProvider;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst THREE = __importStar(require(\"three\"));\nconst dom_to_canvas_1 = __importDefault(require(\"./dom-to-canvas\"));\nconst constants_1 = require(\"./constants\");\nconst lodash_debounce_1 = __importDefault(require(\"lodash.debounce\"));\nconst gif_1 = __importDefault(require(\"./gif\"));\nconst gifFor = new Map();\nclass VFXPlayer {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.isPlaying = false;\n        this.pixelRatio = 2;\n        this.elements = [];\n        this.w = 0;\n        this.h = 0;\n        this.scrollX = 0;\n        this.scrollY = 0;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.resize = lodash_debounce_1.default(() => __awaiter(this, void 0, void 0, function* () {\n            if (typeof window !== \"undefined\") {\n                const w = window.innerWidth;\n                const h = window.innerHeight;\n                this.canvas.width = w;\n                this.canvas.height = h;\n                this.renderer.setSize(w, h);\n                this.renderer.setPixelRatio(this.pixelRatio);\n                this.w = w;\n                this.h = h;\n                for (const e of this.elements) {\n                    if (e.type === \"text\" && e.isInViewport) {\n                        yield this.rerender(e);\n                    }\n                }\n                for (const e of this.elements) {\n                    if (e.type === \"text\" && !e.isInViewport) {\n                        yield this.rerender(e);\n                    }\n                }\n            }\n        }), 50);\n        this.scroll = () => {\n            if (typeof window !== \"undefined\") {\n                this.scrollX = window.scrollX;\n                this.scrollY = window.scrollY;\n            }\n        };\n        this.mousemove = (e) => {\n            if (typeof window !== \"undefined\") {\n                this.mouseX = e.clientX;\n                this.mouseY = window.innerHeight - e.clientY;\n            }\n        };\n        this.playLoop = () => {\n            const now = Date.now() / 1000;\n            this.elements.forEach(e => {\n                const rect = e.element.getBoundingClientRect();\n                const isInViewport = this.isRectInViewport(rect);\n                if (isInViewport && !e.isInViewport) {\n                    e.enterTime = now;\n                }\n                e.isInViewport = isInViewport;\n                if (!e.isInViewport) {\n                    return;\n                }\n                e.uniforms[\"time\"].value = now - e.startTime;\n                e.uniforms[\"enterTime\"].value =\n                    e.enterTime === -1 ? 0 : now - e.enterTime;\n                e.uniforms[\"resolution\"].value.x = rect.width * this.pixelRatio;\n                e.uniforms[\"resolution\"].value.y = rect.height * this.pixelRatio;\n                e.uniforms[\"offset\"].value.x = rect.left * this.pixelRatio;\n                e.uniforms[\"offset\"].value.y =\n                    (window.innerHeight - rect.top - rect.height) * this.pixelRatio;\n                e.uniforms[\"mouse\"].value.x = this.mouseX * this.pixelRatio;\n                e.uniforms[\"mouse\"].value.y = this.mouseY * this.pixelRatio;\n                if (gifFor.has(e.element)) {\n                    const gif = gifFor.get(e.element);\n                    gif.update();\n                }\n                if (e.type === \"video\" || e.isGif) {\n                    e.uniforms[\"src\"].value.needsUpdate = true;\n                }\n                this.camera.lookAt(e.scene.position);\n                this.renderer.setViewport(rect.left, window.innerHeight - (rect.top + rect.height), rect.width, rect.height);\n                try {\n                    this.renderer.render(e.scene, this.camera);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            });\n            if (this.isPlaying) {\n                requestAnimationFrame(this.playLoop);\n            }\n        };\n        this.renderer = new THREE.WebGLRenderer({ canvas, alpha: true });\n        this.renderer.autoClear = false;\n        if (typeof window !== \"undefined\") {\n            this.pixelRatio = window.devicePixelRatio;\n            window.addEventListener(\"resize\", this.resize);\n            window.addEventListener(\"scroll\", this.scroll, { passive: true });\n            window.addEventListener(\"mousemove\", this.mousemove);\n        }\n        this.resize();\n        this.scroll();\n        this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n        this.camera.position.set(0, 0, 1);\n    }\n    destroy() {\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"resize\", this.resize);\n            window.removeEventListener(\"scroll\", this.scroll);\n            window.removeEventListener(\"mousemove\", this.mousemove);\n        }\n    }\n    rerender(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const srcTexture = e.uniforms[\"src\"];\n            try {\n                e.element.style.setProperty(\"opacity\", \"1\");\n                const canvas = yield dom_to_canvas_1.default(e.element);\n                if (canvas.width === 0 || canvas.width === 0) {\n                    throw \"omg\";\n                }\n                e.element.style.setProperty(\"opacity\", \"0\");\n                const texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                srcTexture.value = texture;\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n    }\n    addElement(element, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const shaderName = opts.shader || \"uvGradient\";\n            const shader = constants_1.shaders[shaderName] || shaderName;\n            const rect = element.getBoundingClientRect();\n            const isInViewport = this.isRectInViewport(rect);\n            let texture;\n            let type;\n            let isGif = false;\n            if (element instanceof HTMLImageElement) {\n                type = \"img\";\n                isGif = !!element.src.match(/\\.gif/i);\n                if (isGif) {\n                    const gif = yield gif_1.default.create(element.src, this.pixelRatio);\n                    gifFor.set(element, gif);\n                    texture = new THREE.Texture(gif.getCanvas());\n                }\n                else {\n                    texture = new THREE.Texture(element);\n                }\n            }\n            else if (element instanceof HTMLVideoElement) {\n                texture = new THREE.VideoTexture(element);\n                type = \"video\";\n            }\n            else {\n                const canvas = yield dom_to_canvas_1.default(element);\n                texture = new THREE.Texture(canvas);\n                type = \"text\";\n            }\n            texture.minFilter = THREE.LinearFilter;\n            texture.magFilter = THREE.LinearFilter;\n            texture.format = THREE.RGBAFormat;\n            texture.needsUpdate = true;\n            element.style.setProperty(\"opacity\", \"0\");\n            const uniforms = {\n                src: { type: \"t\", value: texture },\n                resolution: { type: \"v2\", value: new THREE.Vector2() },\n                offset: { type: \"v2\", value: new THREE.Vector2() },\n                time: { type: \"f\", value: 0.0 },\n                enterTime: { type: \"f\", value: -1.0 },\n                mouse: { type: \"v2\", value: new THREE.Vector2() }\n            };\n            const scene = new THREE.Scene();\n            const geometry = new THREE.PlaneGeometry(2, 2);\n            const material = new THREE.ShaderMaterial({\n                vertexShader: constants_1.DEFAULT_VERTEX_SHADER,\n                fragmentShader: shader,\n                transparent: true,\n                uniforms\n            });\n            material.extensions = {\n                derivatives: true,\n                drawBuffers: true,\n                fragDepth: true,\n                shaderTextureLOD: true\n            };\n            scene.add(new THREE.Mesh(geometry, material));\n            const now = Date.now() / 1000;\n            const elem = {\n                element,\n                type,\n                scene,\n                uniforms,\n                startTime: now,\n                enterTime: isInViewport ? now : -1,\n                isInViewport,\n                isGif\n            };\n            this.elements.push(elem);\n        });\n    }\n    removeElement(element) {\n        const i = this.elements.findIndex(e => e.element === element);\n        if (i !== -1) {\n            this.elements.splice(i, 1);\n        }\n    }\n    updateElement(element) {\n        const i = this.elements.findIndex(e => e.element === element);\n        if (i !== -1) {\n            return this.rerender(this.elements[i]);\n        }\n        return Promise.reject();\n    }\n    play() {\n        this.isPlaying = true;\n        this.playLoop();\n    }\n    stop() {\n        this.isPlaying = false;\n    }\n    isRectInViewport(rect) {\n        return (rect.left <= this.w &&\n            rect.right >= 0 &&\n            rect.top <= this.h &&\n            rect.bottom >= 0);\n    }\n}\nexports.default = VFXPlayer;\n//# sourceMappingURL=vfx-player.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getWellFormedHtml = (html) => {\n    const doc = document.implementation.createHTMLDocument(\"test\");\n    const range = doc.createRange();\n    range.selectNodeContents(doc.documentElement);\n    range.deleteContents();\n    const h = document.createElement(\"head\");\n    doc.documentElement.appendChild(h);\n    doc.documentElement.appendChild(range.createContextualFragment(html));\n    doc.documentElement.setAttribute(\"xmlns\", doc.documentElement.namespaceURI);\n    const wfHtml = new XMLSerializer().serializeToString(doc);\n    return wfHtml.replace(/<!DOCTYPE html>/, \"\");\n};\nfunction cloneNode(node) {\n    return node.cloneNode();\n}\nfunction getCanvasFromElement(element) {\n    const style = window.getComputedStyle(element, \"\");\n    const rect = element.getBoundingClientRect();\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = rect.width + 1;\n    canvas.height = rect.height + 1;\n    const newElement = cloneNode(element);\n    const styleText = style.cssText;\n    newElement.setAttribute(\"style\", styleText);\n    newElement.innerHTML = element.innerHTML;\n    const html = newElement.outerHTML;\n    const wellFormedHtml = getWellFormedHtml(html);\n    const data = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${canvas.width}\" height=\"${canvas.height}\">` +\n        `<foreignObject width=\"100%\" height=\"100%\">${wellFormedHtml}</foreignObject></svg>`;\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            const ctx = canvas.getContext(\"2d\");\n            if (ctx === null) {\n                return reject();\n            }\n            ctx.drawImage(img, 0, 0);\n            resolve(canvas);\n        };\n        img.src =\n            \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(data);\n    });\n}\nexports.default = getCanvasFromElement;\n//# sourceMappingURL=dom-to-canvas.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_VERTEX_SHADER = `\nprecision mediump float;\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\nexports.shaders = {\n    uvGradient: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n    void main() {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        gl_FragColor = vec4(uv, sin(time) * .5 + .5, 1);\n\n        vec4 img = texture2D(src, uv);\n        gl_FragColor *= smoothstep(0., 1., img.a);\n    }\n    `,\n    rainbow: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    vec3 hsv2rgb(vec3 c) {\n        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    }\n\n    vec3 rgb2hsv(vec3 c) {\n        vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n        vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n        vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n        float d = q.x - min(q.w, q.y);\n        float e = 1.0e-10;\n        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n    }\n\n    vec3 hueShift(vec3 rgb, float t) {\n        vec3 hsv = rgb2hsv(rgb);\n        hsv.x = fract(hsv.x + t);\n        return hsv2rgb(hsv);\n    }\n\n    void main() {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        vec2 uv2 = uv;\n        uv2.x *= resolution.x / resolution.y;\n\n        float x = (uv2.x - uv2.y) - time;\n\n        vec4 img = texture2D(src, uv);\n        img.rgb *= hueShift(vec3(1,0,0), x);\n\n        gl_FragColor = img;\n    }\n    `,\n    glitch: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec4 color = texture2D(src, uv);\n\n        // Seed value\n        float v = fract(sin(time * 9.));\n\n        // Prepare for chromatic Abbreveation\n        vec2 focus = vec2(0.5, 0.2);\n        float d = v * 0.06;\n        vec2 ruv = focus + (uv - focus) * (1. - d);\n        vec2 guv = focus + (uv - focus) * (1. - 2. * d);\n        vec2 buv = focus + (uv - focus) * (1. - 3. * d);\n\n        // Random Glitch\n        if (v > 0.1) {\n            // Randomize y\n            float y = floor(uv.y * 13. * sin(35. * time)) + 1.;\n            if (sin(36. * y * v) > 0.9) {\n                ruv.x = fract(uv.x + sin(76. * y) * 0.1);\n                guv.x = fract(uv.x + sin(34. * y) * 0.1);\n                buv.x = fract(uv.x + sin(199. * y) * 0.1);\n            }\n\n            // RGB Shift\n            v = pow(v * 1.5, 2.) * 0.15;\n            color.r = texture2D(src, vec2(uv.x + sin(time * 123.45) * v, uv.y)).r;\n            color.g = texture2D(src, vec2(uv.x + sin(time * 457.67) * v, uv.y)).g;\n            color.b = texture2D(src, vec2(uv.x + sin(time * 923.67) * v, uv.y)).b;\n        }\n\n        // Compose Chromatic Abbreveation\n        color.r = color.r * 0.5 + color.r * texture2D(src, ruv).r;\n        color.g = color.g * 0.5 + color.g * texture2D(src, guv).g;\n        color.b = color.b * 0.5 + color.b * texture2D(src, buv).b;\n\n        gl_FragColor = color;\n        gl_FragColor.a = step(.1, length(color.rgb));\n    }\n    `,\n    pixelate: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        float b = sin(time * 2.) * 32. + 48.;\n        uv = floor(uv * b) / b;\n        gl_FragColor = texture2D(src, uv);\n    }\n    `,\n    rgbGlitch: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    float random(vec2 st) {\n        return fract(sin(dot(st, vec2(948.,824.))) * 30284.);\n    }\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec2 uvr = uv, uvg = uv, uvb = uv;\n\n        if (fract(time * 0.3) > .9 || fract(time * 0.71) > .9) {\n            float t = floor(time * 7.);\n\n            float n = random(vec2(t, floor(uv.y * 3.7)));\n            if (n > .9) {\n                uvr.x = fract(uvr.x + random(vec2(t, 1.)) * .03);\n                uvg.x = fract(uvr.x + random(vec2(t, 2.)) * .03);\n                uvb.x = fract(uvr.x + random(vec2(t, 3.)) * .03);\n            }\n\n            float ny = random(vec2(t * 17. + floor(uv * 13.7)));\n            if (ny > .9) {\n                uvr.x = fract(uvr.x + random(vec2(t, 1.)) * .1);\n                uvg.x = fract(uvr.x + random(vec2(t, 2.)) * .1);\n                uvb.x = fract(uvr.x + random(vec2(t, 3.)) * .1);\n            }\n        }\n\n        vec4 cr = texture2D(src, uvr);\n        vec4 cg = texture2D(src, uvg);\n        vec4 cb = texture2D(src, uvb);\n\n        gl_FragColor = vec4(\n            cr.r,\n            cg.g,\n            cb.b,\n            step(.1, cr.a + cg.a + cb.a)\n        );\n    }\n    `,\n    rgbShift: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    float nn(float y, float t) {\n        float n = (\n            sin(y * .07 + t * 8. + sin(y * .5 + t * 10.)) +\n            sin(y * .7 + t * 2. + sin(y * .3 + t * 8.)) * .7 +\n            sin(y * 1.1 + t * 2.8) * .4\n        );\n\n        n += sin(y * 124. + t * 100.7) * sin(y * 877. - t * 38.8) * .3;\n\n        return n;\n    }\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec2 uvr = uv, uvg = uv, uvb = uv;\n\n        if (abs(nn(uv.y, time)) > 1.) {\n            uvr.x += nn(uv.y, time) * .01;\n            uvg.x += nn(uv.y, time + 10.) * .01;\n            uvb.x += nn(uv.y, time + 20.) * .01;\n        }\n\n        vec4 cr = texture2D(src, fract(uvr));\n        vec4 cg = texture2D(src, fract(uvg));\n        vec4 cb = texture2D(src, fract(uvb));\n\n        gl_FragColor = vec4(\n            cr.r,\n            cg.g,\n            cb.b,\n            step(.1, cr.a + cg.a + cb.a)\n        );\n    }\n    `,\n    halftone: `\n    // Halftone Effect by zoidberg\n    // https://www.interactiveshaderformat.com/sketches/234\n\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    // TODO: uniform\n    #define gridSize 15.0\n    #define dotSize 0.7\n    #define smoothing 0.15\n    #define speed 1.0\n\n    #define IMG_PIXEL(x, y) texture2D(x, (y - offset) / resolution);\n\n    vec4 gridRot = vec4(15.0, 45.0, 75.0, 0.0);\n\n    // during calculation we find the closest dot to a frag, determine its size, and then determine the size of the four dots above/below/right/left of it. this array of offsets move \"one left\", \"one up\", \"one right\", and \"one down\"...\n    vec2 originOffsets[4];\n\n    void main() {\n        vec2 fragCoord = gl_FragCoord.xy - offset;\n\n        // a halftone is an overlapping series of grids of dots\n        // each grid of dots is rotated by a different amount\n        // the size of the dots determines the colors. the shape of the dot should never change (always be a dot with regular edges)\n        originOffsets[0] = vec2(-1.0, 0.0);\n        originOffsets[1] = vec2(0.0, 1.0);\n        originOffsets[2] = vec2(1.0, 0.0);\n        originOffsets[3] = vec2(0.0, -1.0);\n\n        vec3 rgbAmounts = vec3(0.0);\n\n        // for each of the channels (i) of RGB...\n        for (float i=0.0; i<3.0; ++i) {\n            // figure out the rotation of the grid in radians\n            float rotRad = radians(gridRot[int(i)]);\n\n            // the grids are rotated counter-clockwise- to find the nearest dot, take the fragment pixel loc,\n            // rotate it clockwise, and split by the grid to find the center of the dot. then rotate this\n            // coord counter-clockwise to yield the location of the center of the dot in pixel coords local to the render space\n            mat2 ccTrans = mat2(vec2(cos(rotRad), sin(rotRad)), vec2(-1.0*sin(rotRad), cos(rotRad)));\n            mat2 cTrans = mat2(vec2(cos(rotRad), -1.0*sin(rotRad)), vec2(sin(rotRad), cos(rotRad)));\n\n            // find the location of the frag in the grid (prior to rotating it)\n            vec2 gridFragLoc = cTrans * fragCoord.xy;\n\n            // find the center of the dot closest to the frag- there's no \"round\" in GLSL 1.2, so do a \"floor\" to find the dot to the bottom-left of the frag, then figure out if the frag would be in the top and right halves of that square to find the closest dot to the frag\n            vec2 gridOriginLoc = vec2(floor(gridFragLoc.x/gridSize), floor(gridFragLoc.y/gridSize));\n\n            vec2 tmpGridCoords = gridFragLoc/vec2(gridSize);\n            bool fragAtTopOfGrid = ((tmpGridCoords.y-floor(tmpGridCoords.y)) > (gridSize/2.0)) ? true : false;\n            bool fragAtRightOfGrid = ((tmpGridCoords.x-floor(tmpGridCoords.x)) > (gridSize/2.0)) ? true : false;\n            if (fragAtTopOfGrid)\n                gridOriginLoc.y = gridOriginLoc.y + 1.0;\n            if (fragAtRightOfGrid)\n                gridOriginLoc.x = gridOriginLoc.x + 1.0;\n\n            // ...at this point, \"gridOriginLoc\" contains the grid coords of the nearest dot to the fragment being rendered\n            // convert the location of the center of the dot from grid coords to pixel coords\n            vec2 gridDotLoc = vec2(gridOriginLoc.x*gridSize, gridOriginLoc.y*gridSize) + vec2(gridSize/2.0);\n\n            // rotate the pixel coords of the center of the dot so they become relative to the rendering space\n            vec2 renderDotLoc = ccTrans * gridDotLoc;\n\n            // get the color of the pixel of the input image under this dot (the color will ultimately determine the size of the dot)\n            vec4 renderDotImageColorRGB = IMG_PIXEL(src, renderDotLoc + offset);\n\n            // the amount of this channel is taken from the same channel of the color of the pixel of the input image under this halftone dot\n            float imageChannelAmount = renderDotImageColorRGB[int(i)];\n\n            // the size of the dot is determined by the value of the channel\n            float dotRadius = imageChannelAmount * (gridSize * dotSize);\n            float fragDistanceToDotCenter = distance(fragCoord.xy, renderDotLoc);\n            if (fragDistanceToDotCenter < dotRadius) {\n                rgbAmounts[int(i)] += smoothstep(dotRadius, dotRadius-(dotRadius*smoothing), fragDistanceToDotCenter);\n            }\n\n            // calcluate the size of the dots abov/below/to the left/right to see if they're overlapping\n            for (float j=0.0; j<4.0; ++j) {\n                gridDotLoc = vec2((gridOriginLoc.x+originOffsets[int(j)].x)*gridSize, (gridOriginLoc.y+originOffsets[int(j)].y)*gridSize) + vec2(gridSize/2.0);\n\n                renderDotLoc = ccTrans * gridDotLoc;\n                renderDotImageColorRGB = IMG_PIXEL(src, renderDotLoc + offset);\n\n                imageChannelAmount = renderDotImageColorRGB[int(i)];\n                dotRadius = imageChannelAmount * (gridSize*1.50/2.0);\n                fragDistanceToDotCenter = distance(fragCoord.xy, renderDotLoc);\n                if (fragDistanceToDotCenter < dotRadius) {\n                    rgbAmounts[int(i)] += smoothstep(dotRadius, dotRadius-(dotRadius*smoothing), fragDistanceToDotCenter);\n                }\n            }\n        }\n\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec4 original = texture2D(src, uv);\n        float alpha = step(.1, rgbAmounts[0] + rgbAmounts[1] + rgbAmounts[2] + original.a);\n\n        gl_FragColor = vec4(rgbAmounts[0], rgbAmounts[1], rgbAmounts[2], alpha);\n    }\n    `,\n    warpTransition: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform float enterTime;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        if (enterTime < 3.) {\n            float t = enterTime / 3.;\n            uv.x += sin(floor(uv.y * 300.)) * 3. * exp(t * -10.);\n        }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    `,\n    slitScanTransition: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform float enterTime;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        if (enterTime < 3.) {\n            float t = enterTime / 3.;\n            uv.y = uv.y < t ? uv.y : t;\n        }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    `,\n    pixelateTransition: `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform float enterTime;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        if (enterTime < 3.) {\n            float t = enterTime / 3.;\n\n            float b = floor(t * 64.);\n            uv = (floor(uv * b) + .5) / b;\n        }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    `\n};\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst gifuct_js_1 = __importDefault(require(\"./gifuct-js\"));\nclass GIFData {\n    constructor(frames, width, height, pixelRatio) {\n        this.frames = [];\n        this.index = 0;\n        this.playTime = 0;\n        this.frames = frames;\n        this.canvas = document.createElement(\"canvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.pixelRatio = pixelRatio;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.startTime = Date.now();\n    }\n    static create(src, pixelRatio) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const gif = yield fetch(src)\n                .then(resp => resp.arrayBuffer())\n                .then(buff => new gifuct_js_1.default(buff));\n            const frames = gif.decompressFrames(true);\n            const width = gif.raw.lsd.width;\n            const height = gif.raw.lsd.height;\n            return new GIFData(frames, width, height, pixelRatio);\n        });\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    update() {\n        const now = Date.now();\n        const elapsedTime = now - this.startTime;\n        while (this.playTime < elapsedTime) {\n            const f = this.frames[this.index % this.frames.length];\n            this.playTime += f.delay;\n            this.index++;\n        }\n        const frame = this.frames[this.index % this.frames.length];\n        const image = new ImageData(frame.patch, frame.dims.width, frame.dims.height);\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.putImageData(image, frame.dims.left, frame.dims.top);\n    }\n}\nexports.default = GIFData;\n//# sourceMappingURL=gif.js.map","\"use strict\";\nconst GIF = require(\"./gif\");\nmodule.exports = GIF;\n//# sourceMappingURL=index.js.map","\"use strict\";\nconst DataParser = require(\"./dataparser\");\nconst gifSchema = require(\"./schema\");\nfunction GIF(arrayBuffer) {\n    var byteData = new Uint8Array(arrayBuffer);\n    var parser = new DataParser(byteData);\n    this.raw = parser.parse(gifSchema);\n    this.raw.hasImages = false;\n    for (var f = 0; f < this.raw.frames.length; f++) {\n        if (this.raw.frames[f].image) {\n            this.raw.hasImages = true;\n            break;\n        }\n    }\n}\nGIF.prototype.decompressFrame = function (index, buildPatch) {\n    if (index >= this.raw.frames.length) {\n        return null;\n    }\n    var frame = this.raw.frames[index];\n    if (frame.image) {\n        var totalPixels = frame.image.descriptor.width * frame.image.descriptor.height;\n        var pixels = lzw(frame.image.data.minCodeSize, frame.image.data.blocks, totalPixels);\n        if (frame.image.descriptor.lct.interlaced) {\n            pixels = deinterlace(pixels, frame.image.descriptor.width);\n        }\n        var image = {\n            pixels: pixels,\n            dims: {\n                top: frame.image.descriptor.top,\n                left: frame.image.descriptor.left,\n                width: frame.image.descriptor.width,\n                height: frame.image.descriptor.height\n            }\n        };\n        if (frame.image.descriptor.lct && frame.image.descriptor.lct.exists) {\n            image.colorTable = frame.image.lct;\n        }\n        else {\n            image.colorTable = this.raw.gct;\n        }\n        if (frame.gce) {\n            image.delay = (frame.gce.delay || 10) * 10;\n            image.disposalType = frame.gce.extras.disposal;\n            if (frame.gce.extras.transparentColorGiven) {\n                image.transparentIndex = frame.gce.transparentColorIndex;\n            }\n        }\n        if (buildPatch) {\n            image.patch = generatePatch(image);\n        }\n        return image;\n    }\n    return null;\n    function lzw(minCodeSize, data, pixelCount) {\n        var MAX_STACK_SIZE = 4096;\n        var nullCode = -1;\n        var npix = pixelCount;\n        var available, clear, code_mask, code_size, count, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n        var dstPixels = new Array(pixelCount);\n        var prefix = new Array(MAX_STACK_SIZE);\n        var suffix = new Array(MAX_STACK_SIZE);\n        var pixelStack = new Array(MAX_STACK_SIZE + 1);\n        data_size = minCodeSize;\n        clear = 1 << data_size;\n        end_of_information = clear + 1;\n        available = clear + 2;\n        old_code = nullCode;\n        code_size = data_size + 1;\n        code_mask = (1 << code_size) - 1;\n        for (code = 0; code < clear; code++) {\n            prefix[code] = 0;\n            suffix[code] = code;\n        }\n        datum = bits = count = first = top = pi = bi = 0;\n        for (i = 0; i < npix;) {\n            if (top === 0) {\n                if (bits < code_size) {\n                    datum += data[bi] << bits;\n                    bits += 8;\n                    bi++;\n                    continue;\n                }\n                code = datum & code_mask;\n                datum >>= code_size;\n                bits -= code_size;\n                if (code > available || code == end_of_information) {\n                    break;\n                }\n                if (code == clear) {\n                    code_size = data_size + 1;\n                    code_mask = (1 << code_size) - 1;\n                    available = clear + 2;\n                    old_code = nullCode;\n                    continue;\n                }\n                if (old_code == nullCode) {\n                    pixelStack[top++] = suffix[code];\n                    old_code = code;\n                    first = code;\n                    continue;\n                }\n                in_code = code;\n                if (code == available) {\n                    pixelStack[top++] = first;\n                    code = old_code;\n                }\n                while (code > clear) {\n                    pixelStack[top++] = suffix[code];\n                    code = prefix[code];\n                }\n                first = suffix[code] & 0xff;\n                pixelStack[top++] = first;\n                if (available < MAX_STACK_SIZE) {\n                    prefix[available] = old_code;\n                    suffix[available] = first;\n                    available++;\n                    if ((available & code_mask) === 0 &&\n                        available < MAX_STACK_SIZE) {\n                        code_size++;\n                        code_mask += available;\n                    }\n                }\n                old_code = in_code;\n            }\n            top--;\n            dstPixels[pi++] = pixelStack[top];\n            i++;\n        }\n        for (i = pi; i < npix; i++) {\n            dstPixels[i] = 0;\n        }\n        return dstPixels;\n    }\n    function deinterlace(pixels, width) {\n        var newPixels = new Array(pixels.length);\n        var rows = pixels.length / width;\n        var cpRow = function (toRow, fromRow) {\n            var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n            newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n        };\n        var offsets = [0, 4, 2, 1];\n        var steps = [8, 8, 4, 2];\n        var fromRow = 0;\n        for (var pass = 0; pass < 4; pass++) {\n            for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n                cpRow(toRow, fromRow);\n                fromRow++;\n            }\n        }\n        return newPixels;\n    }\n    function generatePatch(image) {\n        var totalPixels = image.pixels.length;\n        var patchData = new Uint8ClampedArray(totalPixels * 4);\n        for (var i = 0; i < totalPixels; i++) {\n            var pos = i * 4;\n            var colorIndex = image.pixels[i];\n            var color = image.colorTable[colorIndex];\n            patchData[pos] = color[0];\n            patchData[pos + 1] = color[1];\n            patchData[pos + 2] = color[2];\n            patchData[pos + 3] =\n                colorIndex !== image.transparentIndex ? 255 : 0;\n        }\n        return patchData;\n    }\n};\nGIF.prototype.decompressFrames = function (buildPatch, startFrame, endFrame) {\n    if (startFrame === undefined) {\n        startFrame = 0;\n    }\n    if (endFrame === undefined) {\n        endFrame = this.raw.frames.length;\n    }\n    else {\n        endFrame = Math.min(endFrame, this.raw.frames.length);\n    }\n    var frames = [];\n    for (var i = startFrame; i < endFrame; i++) {\n        var frame = this.raw.frames[i];\n        if (frame.image) {\n            frames.push(this.decompressFrame(i, buildPatch));\n        }\n    }\n    return frames;\n};\nmodule.exports = GIF;\n//# sourceMappingURL=gif.js.map","\"use strict\";\nvar ByteStream = require('./bytestream');\nfunction DataParser(data) {\n    this.stream = new ByteStream(data);\n    this.output = {};\n}\nDataParser.prototype.parse = function (schema) {\n    this.parseParts(this.output, schema);\n    return this.output;\n};\nDataParser.prototype.parseParts = function (obj, schema) {\n    for (var i = 0; i < schema.length; i++) {\n        var part = schema[i];\n        this.parsePart(obj, part);\n    }\n};\nDataParser.prototype.parsePart = function (obj, part) {\n    var name = part.label;\n    var value;\n    if (part.requires && !part.requires(this.stream, this.output, obj)) {\n        return;\n    }\n    if (part.loop) {\n        var items = [];\n        while (part.loop(this.stream)) {\n            var item = {};\n            this.parseParts(item, part.parts);\n            items.push(item);\n        }\n        obj[name] = items;\n    }\n    else if (part.parts) {\n        value = {};\n        this.parseParts(value, part.parts);\n        obj[name] = value;\n    }\n    else if (part.parser) {\n        value = part.parser(this.stream, this.output, obj);\n        if (!part.skip) {\n            obj[name] = value;\n        }\n    }\n    else if (part.bits) {\n        obj[name] = this.parseBits(part.bits);\n    }\n};\nfunction bitsToNum(bitArray) {\n    return bitArray.reduce(function (s, n) { return s * 2 + n; }, 0);\n}\nDataParser.prototype.parseBits = function (details) {\n    var out = {};\n    var bits = this.stream.readBitArray();\n    for (var key in details) {\n        var item = details[key];\n        if (item.length) {\n            out[key] = bitsToNum(bits.slice(item.index, item.index + item.length));\n        }\n        else {\n            out[key] = bits[item.index];\n        }\n    }\n    return out;\n};\nmodule.exports = DataParser;\n//# sourceMappingURL=dataparser.js.map","\"use strict\";\nfunction ByteStream(data) {\n    this.data = data;\n    this.pos = 0;\n}\nByteStream.prototype.readByte = function () {\n    return this.data[this.pos++];\n};\nByteStream.prototype.peekByte = function () {\n    return this.data[this.pos];\n};\nByteStream.prototype.readBytes = function (n) {\n    return this.data.subarray(this.pos, this.pos += n);\n};\nByteStream.prototype.peekBytes = function (n) {\n    return this.data.subarray(this.pos, this.pos + n);\n};\nByteStream.prototype.readString = function (len) {\n    var str = '';\n    for (var i = 0; i < len; i++) {\n        str += String.fromCharCode(this.readByte());\n    }\n    return str;\n};\nByteStream.prototype.readBitArray = function () {\n    var arr = [];\n    var bite = this.readByte();\n    for (var i = 7; i >= 0; i--) {\n        arr.push(!!(bite & (1 << i)));\n    }\n    return arr;\n};\nByteStream.prototype.readUnsigned = function (littleEndian) {\n    var a = this.readBytes(2);\n    if (littleEndian) {\n        return (a[1] << 8) + a[0];\n    }\n    else {\n        return (a[0] << 8) + a[1];\n    }\n};\nmodule.exports = ByteStream;\n//# sourceMappingURL=bytestream.js.map","\"use strict\";\nvar Parsers = require(\"./parsers\");\nvar subBlocks = {\n    label: \"blocks\",\n    parser: function (stream) {\n        var views = [];\n        var total = 0;\n        var terminator = 0x00;\n        for (var size = stream.readByte(); size !== terminator; size = stream.readByte()) {\n            views.push(stream.readBytes(size));\n            total += size;\n        }\n        var out = new Uint8Array(total);\n        total = 0;\n        for (var i = 0; i < views.length; i++) {\n            out.set(views[i], total);\n            total += views[i].length;\n        }\n        return out;\n    }\n};\nvar gce = {\n    label: \"gce\",\n    requires: function (stream) {\n        var codes = stream.peekBytes(2);\n        return codes[0] === 0x21 && codes[1] === 0xf9;\n    },\n    parts: [\n        { label: \"codes\", parser: Parsers.readBytes(2), skip: true },\n        { label: \"byteSize\", parser: Parsers.readByte() },\n        {\n            label: \"extras\",\n            bits: {\n                future: { index: 0, length: 3 },\n                disposal: { index: 3, length: 3 },\n                userInput: { index: 6 },\n                transparentColorGiven: { index: 7 }\n            }\n        },\n        { label: \"delay\", parser: Parsers.readUnsigned(true) },\n        { label: \"transparentColorIndex\", parser: Parsers.readByte() },\n        { label: \"terminator\", parser: Parsers.readByte(), skip: true }\n    ]\n};\nvar image = {\n    label: \"image\",\n    requires: function (stream) {\n        var code = stream.peekByte();\n        return code === 0x2c;\n    },\n    parts: [\n        { label: \"code\", parser: Parsers.readByte(), skip: true },\n        {\n            label: \"descriptor\",\n            parts: [\n                { label: \"left\", parser: Parsers.readUnsigned(true) },\n                { label: \"top\", parser: Parsers.readUnsigned(true) },\n                { label: \"width\", parser: Parsers.readUnsigned(true) },\n                { label: \"height\", parser: Parsers.readUnsigned(true) },\n                {\n                    label: \"lct\",\n                    bits: {\n                        exists: { index: 0 },\n                        interlaced: { index: 1 },\n                        sort: { index: 2 },\n                        future: { index: 3, length: 2 },\n                        size: { index: 5, length: 3 }\n                    }\n                }\n            ]\n        },\n        {\n            label: \"lct\",\n            requires: function (stream, obj, parent) {\n                return parent.descriptor.lct.exists;\n            },\n            parser: Parsers.readArray(3, function (stream, obj, parent) {\n                return Math.pow(2, parent.descriptor.lct.size + 1);\n            })\n        },\n        {\n            label: \"data\",\n            parts: [\n                { label: \"minCodeSize\", parser: Parsers.readByte() },\n                subBlocks\n            ]\n        }\n    ]\n};\nvar text = {\n    label: \"text\",\n    requires: function (stream) {\n        var codes = stream.peekBytes(2);\n        return codes[0] === 0x21 && codes[1] === 0x01;\n    },\n    parts: [\n        { label: \"codes\", parser: Parsers.readBytes(2), skip: true },\n        { label: \"blockSize\", parser: Parsers.readByte() },\n        {\n            label: \"preData\",\n            parser: function (stream, obj, parent) {\n                return stream.readBytes(parent.text.blockSize);\n            }\n        },\n        subBlocks\n    ]\n};\nvar application = {\n    label: \"application\",\n    requires: function (stream, obj, parent) {\n        var codes = stream.peekBytes(2);\n        return codes[0] === 0x21 && codes[1] === 0xff;\n    },\n    parts: [\n        { label: \"codes\", parser: Parsers.readBytes(2), skip: true },\n        { label: \"blockSize\", parser: Parsers.readByte() },\n        {\n            label: \"id\",\n            parser: function (stream, obj, parent) {\n                return stream.readString(parent.blockSize);\n            }\n        },\n        subBlocks\n    ]\n};\nvar comment = {\n    label: \"comment\",\n    requires: function (stream, obj, parent) {\n        var codes = stream.peekBytes(2);\n        return codes[0] === 0x21 && codes[1] === 0xfe;\n    },\n    parts: [\n        { label: \"codes\", parser: Parsers.readBytes(2), skip: true },\n        subBlocks\n    ]\n};\nvar frames = {\n    label: \"frames\",\n    parts: [gce, application, comment, image, text],\n    loop: function (stream) {\n        var nextCode = stream.peekByte();\n        return nextCode === 0x21 || nextCode === 0x2c;\n    }\n};\nvar schemaGIF = [\n    {\n        label: \"header\",\n        parts: [\n            { label: \"signature\", parser: Parsers.readString(3) },\n            { label: \"version\", parser: Parsers.readString(3) }\n        ]\n    },\n    {\n        label: \"lsd\",\n        parts: [\n            { label: \"width\", parser: Parsers.readUnsigned(true) },\n            { label: \"height\", parser: Parsers.readUnsigned(true) },\n            {\n                label: \"gct\",\n                bits: {\n                    exists: { index: 0 },\n                    resolution: { index: 1, length: 3 },\n                    sort: { index: 4 },\n                    size: { index: 5, length: 3 }\n                }\n            },\n            { label: \"backgroundColorIndex\", parser: Parsers.readByte() },\n            { label: \"pixelAspectRatio\", parser: Parsers.readByte() }\n        ]\n    },\n    {\n        label: \"gct\",\n        requires: function (stream, obj) {\n            return obj.lsd.gct.exists;\n        },\n        parser: Parsers.readArray(3, function (stream, obj) {\n            return Math.pow(2, obj.lsd.gct.size + 1);\n        })\n    },\n    frames\n];\nmodule.exports = schemaGIF;\n//# sourceMappingURL=schema.js.map","\"use strict\";\nvar Parsers = {\n    readByte: function () {\n        return function (stream) {\n            return stream.readByte();\n        };\n    },\n    readBytes: function (length) {\n        return function (stream) {\n            return stream.readBytes(length);\n        };\n    },\n    readString: function (length) {\n        return function (stream) {\n            return stream.readString(length);\n        };\n    },\n    readUnsigned: function (littleEndian) {\n        return function (stream) {\n            return stream.readUnsigned(littleEndian);\n        };\n    },\n    readArray: function (size, countFunc) {\n        return function (stream, obj, parent) {\n            var count = countFunc(stream, obj, parent);\n            var arr = new Array(count);\n            for (var i = 0; i < count; i++) {\n                arr[i] = stream.readBytes(size);\n            }\n            return arr;\n        };\n    }\n};\nmodule.exports = Parsers;\n//# sourceMappingURL=parsers.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst react_1 = require(\"react\");\nconst context_1 = require(\"./context\");\nconst VFXImg = props => {\n    const player = react_1.useContext(context_1.VFXContext);\n    const ref = react_1.useRef(null);\n    const init = react_1.useCallback(() => {\n        var _a;\n        if (ref.current === null) {\n            return;\n        }\n        const shader = props.shader;\n        (_a = player) === null || _a === void 0 ? void 0 : _a.addElement(ref.current, { shader });\n        return () => {\n            var _a;\n            if (ref.current === null) {\n                return;\n            }\n            (_a = player) === null || _a === void 0 ? void 0 : _a.removeElement(ref.current);\n        };\n    }, [ref, player]);\n    return React.createElement(\"img\", Object.assign({ ref: ref }, props, { onLoad: init }));\n};\nexports.default = VFXImg;\n//# sourceMappingURL=image.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst react_1 = require(\"react\");\nconst context_1 = require(\"./context\");\nconst VFXVideo = props => {\n    const player = react_1.useContext(context_1.VFXContext);\n    const ref = react_1.useRef(null);\n    const onLoadedData = react_1.useCallback(() => {\n        var _a;\n        if (ref.current === null) {\n            return;\n        }\n        const shader = props.shader;\n        (_a = player) === null || _a === void 0 ? void 0 : _a.addElement(ref.current, { shader });\n        return () => {\n            var _a;\n            if (ref.current === null) {\n                return;\n            }\n            (_a = player) === null || _a === void 0 ? void 0 : _a.removeElement(ref.current);\n        };\n    }, [ref, player]);\n    return React.createElement(\"video\", Object.assign({ ref: ref }, props, { onLoadedData: onLoadedData }));\n};\nexports.default = VFXVideo;\n//# sourceMappingURL=video.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst react_1 = require(\"react\");\nconst context_1 = require(\"./context\");\nfunction VFXElementFactory(type) {\n    const VFXElement = (props) => {\n        const player = react_1.useContext(context_1.VFXContext);\n        const ref = react_1.useRef(null);\n        react_1.useEffect(() => {\n            var _a;\n            if (ref.current === null) {\n                return;\n            }\n            const shader = props.shader;\n            (_a = player) === null || _a === void 0 ? void 0 : _a.addElement(ref.current, { shader });\n            return () => {\n                var _a;\n                if (ref.current === null) {\n                    return;\n                }\n                (_a = player) === null || _a === void 0 ? void 0 : _a.removeElement(ref.current);\n            };\n        }, [ref, player]);\n        react_1.useEffect(() => {\n            var _a;\n            if (ref.current === null) {\n                return;\n            }\n            (_a = player) === null || _a === void 0 ? void 0 : _a.updateElement(ref.current);\n        }, [props.children]);\n        return React.createElement(type, Object.assign(Object.assign({}, props), { ref }));\n    };\n    return VFXElement;\n}\nexports.default = VFXElementFactory;\n//# sourceMappingURL=element.js.map","import React, { useState } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport \"./App.css\";\nimport * as VFX from \"react-vfx\";\n\nconst blink = `\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n    void main() {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        gl_FragColor = texture2D(src, uv) * (1. - sin(time * 10.));\n    }\n`;\n\nconst mouse = `\n    precision mediump float;\n    uniform vec2 offset;\n    uniform vec2 mouse;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main() {\n        float l = length(gl_FragCoord.xy - mouse);\n        float threshold = 100.;\n        float c = smoothstep(threshold + .01, threshold, l);\n        gl_FragColor = vec4(c);\n    }\n`;\n\nconst App: React.FC = () => {\n    const [text, setText] = useState(\"You can dynamically!!!!\");\n    const [debouncedText, setDebouncedText] = useState(\n        \"You can dynamically!!!!\"\n    );\n\n    useDebounce(\n        () => {\n            setDebouncedText(text);\n        },\n        100,\n        [text]\n    );\n\n    return (\n        <VFX.VFXProvider>\n            <div className=\"App\">\n                <div className=\"App-frame\"></div>\n                <section className=\"App-hero\">\n                    <div className=\"App-hero-logo\">\n                        <VFX.VFXImg\n                            src=\"logo-mobile@2x.png\"\n                            shader={\"rgbShift\"}\n                        />\n                    </div>\n                </section>\n                <section className=\"Section2\">\n                    <VFX.VFXP shader=\"rainbow\">\n                        REACT-VFX is a React component library. It allows you to\n                        use WebGL power to stylize your React application.\n                        REACT-VFX is a React component library. It allows you to\n                        use WebGL power to stylize your React application.\n                        REACT-VFX is a React component library. It allows you to\n                        use WebGL power to stylize your React application.\n                    </VFX.VFXP>\n                </section>\n\n                <section className=\"Secton3\">\n                    <h2>\n                        <VFX.VFXSpan shader=\"rainbow\">\n                            {debouncedText}\n                        </VFX.VFXSpan>\n                    </h2>\n                    <br />\n                    <input\n                        style={{ fontSize: 36 }}\n                        type=\"text\"\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                    ></input>\n                </section>\n\n                <section className=\"Secton3\">\n                    <h2>Transition Effects!</h2>\n                    <VFX.VFXImg shader=\"warpTransition\" src=\"logo192.png\" />\n                    <VFX.VFXImg shader=\"slitScanTransition\" src=\"logo192.png\" />\n                    <VFX.VFXImg shader=\"pixelateTransition\" src=\"logo192.png\" />\n                </section>\n\n                <section className=\"Section-Gif\">\n                    <h2>GIF</h2>\n                    <img src=\"mind_blown.gif\" alt=\"mind_blown original\" />\n                    <img src=\"octocat.gif\" alt=\"octocat original\" />\n                    <img src=\"cat.gif\" alt=\"cat original\" />\n                    <img src=\"doge.gif\" alt=\"doge original\" />\n                    <br />\n                    <VFX.VFXImg src=\"mind_blown.gif\" shader=\"halftone\" />\n                    <VFX.VFXImg src=\"octocat.gif\" shader=\"glitch\" />\n                    <VFX.VFXImg src=\"cat.gif\" shader=\"rainbow\" />\n                    <VFX.VFXImg src=\"doge.gif\" shader=\"pixelate\" />\n                </section>\n\n                <section className=\"Section-Video\">\n                    <h2>VIDEO</h2>\n                    <VFX.VFXVideo\n                        src=\"mind_blown_2.mp4\"\n                        shader=\"rainbow\"\n                        autoPlay\n                        loop\n                        muted\n                        playsInline\n                    />\n                    <video\n                        src=\"mind_blown_2.mp4\"\n                        autoPlay\n                        loop\n                        muted\n                        playsInline\n                    />\n                </section>\n                <section>\n                    <h2>Author</h2>\n                    <img />\n                    <a href=\"https://twitter.com/amagitakayosi\">AMAGI</a>\n                </section>\n            </div>\n        </VFX.VFXProvider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}